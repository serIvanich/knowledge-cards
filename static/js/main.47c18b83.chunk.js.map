{"version":3,"sources":["n1-main/m1-ui/header/Header.module.css","n1-main/m1-ui/auth/password/fogotPassword/ForgotPass.module.scss","n1-main/m1-ui/auth/login/Login.module.scss","n2-features/f1-packsListTable/PackListTable.module.scss","n1-main/m1-ui/components/error404/Error404.module.css","n1-main/m1-ui/components/profile/Profile.module.scss","n1-main/m1-ui/auth/register/Register.module.scss","n1-main/m1-ui/auth/password/setPassword/setPass.module.scss","n1-main/m1-ui/auth/password/fogotPassword/CheckEmail/CheckEmail.module.scss","n2-features/f3-paginator/Paginator.module.scss","n1-main/m1-ui/header/Navbar/Navbar.module.scss","n1-main/m1-ui/common/Preloader/Preloader.module.scss","n1-main/m3-dall/app-api.ts","utils/error-utils.ts","n1-main/m2-bll/reducers/profile-reducer.ts","n1-main/m3-dall/passwordRecovery-api.ts","n1-main/m2-bll/reducers/auth-reducer.ts","n1-main/m2-bll/reducers/app-reduser.ts","n1-main/m1-ui/auth/register/register-reducer.ts","n1-main/m1-ui/auth/register/Register.tsx","n1-main/m1-ui/routes/routes.ts","n1-main/m1-ui/header/Navbar/FakeNavbar.tsx","n1-main/m1-ui/header/Navbar/Navbar.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m1-ui/auth/password/setPassword/setPass.tsx","n1-main/m1-ui/components/error404/Error404.tsx","n1-main/m1-ui/auth/login/Login.tsx","n1-main/m1-ui/auth/login/LoginContainer.tsx","assecs/image/1486.gif","n1-main/m1-ui/common/Preloader/Preloader.tsx","n1-main/m1-ui/auth/password/fogotPassword/ForgotPass.tsx","assecs/image/checkEmail.svg","n1-main/m1-ui/auth/password/fogotPassword/CheckEmail/CheckEmail.tsx","n1-main/m1-ui/auth/password/fogotPassword/ForgotContainerPass.tsx","n1-main/m2-bll/reducers/forgotPasswordThunk.ts","n1-main/m1-ui/components/profile/Profile.tsx","n2-features/f1-packsListTable/PacksListTable.tsx","n2-features/f4-search/Search.tsx","n1-main/m2-bll/reducers/paginate-reducer.ts","n2-features/f3-paginator/Paginator.tsx","n1-main/m3-dall/packs-api.ts","n1-main/m2-bll/reducers/packs-reducer.ts","n1-main/m1-ui/components/profile/ProfileContainer.tsx","n2-features/f5-toggleMyPacks/ToggleMyPacks.tsx","n2-features/f6-doubleSlider/DoubleSlider.tsx","n1-main/m1-ui/components/Main/packsList/PackList.tsx","n1-main/m1-ui/components/Main/Main.tsx","n1-main/m1-ui/app/App.tsx","reportWebVitals.ts","n1-main/m2-bll/reducers/cards-reducer.ts","n1-main/m2-bll/store.ts","index.tsx"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","authApi","post","then","res","data","delete","handleServerNetworkError","e","dispatch","error","response","message","console","log","setAppErrorAC","setAppStatusAC","initialState","_id","email","name","avatar","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","setUserProfileAC","type","passwordRecoveryApi","password","token","resetPasswordToken","isLogged","checkMailPage","isLoggedAC","setNewPasswordAC","status","isInitialized","isUserRegistered","setErrorAC","value","Register","useDispatch","registerState","useSelector","state","register","formik","useFormik","initialValues","confirmPassword","validate","values","errors","test","length","onSubmit","a","resetForm","to","alert","className","s","registerBlock","registerCard","title","handleSubmit","formBlock","inputItem","htmlFor","labelTitle","getFieldProps","style","touched","buttonsBlock","onClick","routes","FakeNavbar","nav","item","activeClassName","activeLink","Navbar","navLoginContainer","navLogotype","navLinksBox","navLink","Header","auth","SetPass","authMessage","id","useParams","setNewPasswordBlock","setNewPasswordCard","placeholder","innerText","Error404","container","rail","stamp","four","zero","world","forward","box","wall","Login","cancelHandler","loginBlock","loginCard","defaultValue","navLinkBlock","checked","button","LoginContainer","payload","Preloader","preloaderContainer","src","preload","ForgotPass","React","memo","formContainer","emailText","buttonItem","passwordText","loginLink","CheckEmail","setRedirectToCheckEmail","checkEmailPage","checkEmailContainer","h1","wrapper","chekEmailImg","href","checkEmail","instructions","ForgotContainerPass","store","app","loading","useState","redirectToCheckEmail","from","param","catch","recoveryPasswordContainer","Profile","profile","isLogout","profileSidebar","infoBlock","width","buttonLogout","PacksListTable","cardPacks","packs","tableBlock","tableRow","tableCell","map","p","i","cardsCount","rating","searchValidate","Search","searchBlock","term","setSubmitting","setTimeout","JSON","stringify","props","onChange","handleChange","onBlur","handleBlur","paginateSlice","createSlice","totalItemsCount","pageSize","currentPage","portionSize","reducers","setCurrentPageAC","action","pageNumber","paginateReducer","reducer","Paginator","actions","paginateState","paginator","pagesCount","Math","ceil","pages","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginatorContainer","paginatorBtn","disabled","pageNumbersBlock","filter","selectedPage","packsApi","params","get","cardsPacksTotalCount","maxCardsCount","minCardsCount","page","pageCount","getPacksCardsTC","ProfileContainer","useEffect","pagesContainer","sideBar","mainPart","ToggleMyPacks","DoubleSlider","PacksList","Main","App","appCss","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducers","combineReducers","cards","newState","configureStore","middleware","getDefaultMiddleware","prepend","thunk","window","__store__","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47c18b83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__3Wug3\",\"item\":\"Header_item__5NHAR\",\"activeLink\":\"Header_activeLink__1tLNU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerBlock\":\"ForgotPass_registerBlock__2xZs4\",\"registerCard\":\"ForgotPass_registerCard__3sMa8\",\"error\":\"ForgotPass_error__2rjVD\",\"formContainer\":\"ForgotPass_formContainer__2mj6t\",\"emailText\":\"ForgotPass_emailText__1kK0u\",\"passwordText\":\"ForgotPass_passwordText__3By3-\",\"formBlock\":\"ForgotPass_formBlock__wReKQ\",\"inputItem\":\"ForgotPass_inputItem__1LO5j\",\"labelTitle\":\"ForgotPass_labelTitle__1s9MG\",\"loginLink\":\"ForgotPass_loginLink__1Jm3m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Login_loginBlock__3Q7_i\",\"loginCard\":\"Login_loginCard__uchU6\",\"formBlock\":\"Login_formBlock__2jk5w\",\"inputItem\":\"Login_inputItem__ix-P5\",\"buttonsBlock\":\"Login_buttonsBlock__f241W\",\"button\":\"Login_button__3435L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tableBlock\":\"PackListTable_tableBlock__2KXX3\",\"tableRow\":\"PackListTable_tableRow__3mn58\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error404_container__UA34i\",\"rail\":\"Error404_rail__1WwBm\",\"stamp\":\"Error404_stamp__38a1y\",\"stampSlide\":\"Error404_stampSlide__2wdSh\",\"world\":\"Error404_world__-iEHt\",\"forward\":\"Error404_forward__2_bPU\",\"slide\":\"Error404_slide__2OM-G\",\"box\":\"Error404_box__1uX-b\",\"roll\":\"Error404_roll__2T2lU\",\"wall\":\"Error404_wall__Sv9h5\",\"zeroFour\":\"Error404_zeroFour__1gDxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesContainer\":\"Profile_pagesContainer__3W-Ni\",\"sideBar\":\"Profile_sideBar__3CY90\",\"mainPart\":\"Profile_mainPart__2w5Gk\",\"profileSidebar\":\"Profile_profileSidebar__2SkDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerBlock\":\"Register_registerBlock__3FEC6\",\"registerCard\":\"Register_registerCard__1Cv0K\",\"formBlock\":\"Register_formBlock__1tyLH\",\"inputItem\":\"Register_inputItem__2xMMZ\",\"buttonsBlock\":\"Register_buttonsBlock__1FhdT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setNewPasswordBlock\":\"setPass_setNewPasswordBlock__3gPuf\",\"setNewPasswordCard\":\"setPass_setNewPasswordCard__3OgS9\",\"formBlock\":\"setPass_formBlock__3JwRv\",\"inputItem\":\"setPass_inputItem__2bIVN\",\"innerText\":\"setPass_innerText__2RvYm\",\"buttonsBlock\":\"setPass_buttonsBlock__3QIgQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkEmailPage\":\"CheckEmail_checkEmailPage__2_y1U\",\"checkEmailContainer\":\"CheckEmail_checkEmailContainer__GEsUm\",\"wrapper\":\"CheckEmail_wrapper__1mAPG\",\"chekEmailImg\":\"CheckEmail_chekEmailImg__1o3g0\",\"checkEmail\":\"CheckEmail_checkEmail__1AkTB\",\"instructions\":\"CheckEmail_instructions__ZEKPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__GNFY7\",\"paginatorContainer\":\"Paginator_paginatorContainer__2HpfO\",\"paginatorBtn\":\"Paginator_paginatorBtn__2WEzi\",\"pageNumbersBlock\":\"Paginator_pageNumbersBlock__NjKy_\",\"pageNumber\":\"Paginator_pageNumber__PVO2x\",\"selectedPage\":\"Paginator_selectedPage__1HVnq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLoginContainer\":\"Navbar_navLoginContainer__2vxCJ\",\"navLogotype\":\"Navbar_navLogotype__17q_U\",\"navLinksBox\":\"Navbar_navLinksBox__XkYpe\",\"navLink\":\"Navbar_navLink__2WlFq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__3egDl\"};","import axios from \"axios\";\r\nimport {UserProfileType} from \"../m2-bll/reducers/profile-reducer\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    // baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    baseURL: \"http://localhost:7542/2.0/\",\r\n\r\n})\r\n\r\nexport const authApi = {\r\n    me() {\r\n        return instance.post('auth/me', {}).then(res => res.data)\r\n    },\r\n    register(data:RegisterParamsType) {\r\n        return instance.post('/auth/register', data).then(res => res.data)\r\n    },\r\n    login(data: LoginDataType) {\r\n        return instance.post<UserProfileType>('auth/login', data).then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/me')\r\n    },\r\n    forgot(data: ForgotDataType) {\r\n        return instance.post('auth/forgot', data)\r\n    }\r\n}\r\n\r\n//types\r\nexport type RegisterParamsType = {\r\n    email:string\r\n    password:string\r\n}\r\n\r\nexport type LoginDataType = {\r\n    email:string\r\n    password:string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type ForgotDataType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}","\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"../n1-main/m2-bll/reducers/app-reduser\";\r\n// import {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"../n1-main/m2-bll/reducers/app-reduser\";\r\n//\r\n\r\n// generic function\r\n// export const handleServerAppError = <T>(data: ResponseType<T>, dispatch: ErrorUtilsDispatchType) => {\r\n//     if (data.messages.length) {\r\n//         dispatch(setAppErrorAC(data.messages[0]))\r\n//     } else {\r\n//         dispatch(setAppErrorAC('Some error occurred'))\r\n//     }\r\n//     dispatch(setAppStatusAC('failed'))\r\n// }\r\n\r\nexport const handleServerNetworkError = (e: any, dispatch: ErrorUtilsDispatchType) => {\r\n    const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n    console.log(error)\r\n    dispatch(setAppErrorAC(error))\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport type ErrorUtilsDispatchType = Dispatch","\r\nconst initialState: UserProfileType = {\r\n    _id: \"\",\r\n    email: \"\",\r\n    name: \"\",\r\n    avatar: \"\",\r\n    publicCardPacksCount: 0,\r\n    created: new Date(2013, 2, 1, 0, 70),\r\n    updated: new Date(2015, 2, 1, 0, 70),\r\n    isAdmin: false,\r\n    verified: false ,\r\n    rememberMe: false,\r\n    error: \"\",\r\n}\r\n\r\nexport const profileReducer = (state: UserProfileType = initialState, action: ActionType) => {\r\nswitch (action.type) {\r\n    case 'profile/SET-USER-PROFILE-DATA':\r\n        return {\r\n            ...action.data\r\n        }\r\n    default:\r\n        return state\r\n}\r\n}\r\n\r\n\r\nexport const setUserProfileAC = (data:UserProfileType) => ({type:'profile/SET-USER-PROFILE-DATA', data} as const)\r\n\r\n\r\n\r\nexport type UserProfileType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number // количество колод\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean // подтвердил ли почту\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setUserProfileAC>","import {instance} from \"./app-api\";\r\n\r\nexport type ForgotDataType = {\r\n    error: string;\r\n}\r\n\r\nexport const passwordRecoveryApi = {\r\n    setNewPassword(password: string, token: string) {\r\n        return instance.post('/auth/set-new-password', {\r\n            password,\r\n            resetPasswordToken: token,\r\n        })\r\n    }\r\n}\r\n","import {authApi, LoginDataType} from \"../../m3-dall/app-api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {handleServerNetworkError} from \"../../../utils/error-utils\";\r\nimport {setAppStatusAC} from \"./app-reduser\";\r\nimport {setUserProfileAC} from \"./profile-reducer\";\r\nimport {passwordRecoveryApi} from \"../../m3-dall/passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    isLogged: false,\r\n    message: '',\r\n    checkMailPage: false,\r\n}\r\n\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionType) => {\r\n\r\n    switch(action.type) {\r\n        case 'auth/IS-LOGGED':\r\n            return {\r\n                ...state,\r\n                isLogged: action.isLogged\r\n            }\r\n        case 'auth/SET-NEW_PASSWORD':\r\n            return {...state, message: action.message }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const isLoggedAC = (isLogged: boolean) => ({type: 'auth/IS-LOGGED', isLogged }as const)\r\nexport const setNewPasswordAC = (message:string) => ({type: 'auth/SET-NEW_PASSWORD', message } as const)\r\n\r\n\r\nexport const loginTC = (payload: LoginDataType) => async (dispatch: Dispatch) => {\r\n    try{\r\n        dispatch(setAppStatusAC('loading'))\r\n        const data = await authApi.login(payload)\r\n        dispatch(isLoggedAC(true))\r\n        dispatch(setUserProfileAC(data))\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const logoutTC = () => async (dispatch: Dispatch) => {\r\n    try{\r\n        dispatch(setAppStatusAC('loading'))\r\n        const data = await authApi.logout()\r\n        dispatch(isLoggedAC(false))\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const setNewPasswordTC = (password:string, token:string) => async (dispatch:Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        const res = await passwordRecoveryApi.setNewPassword(password, token)\r\n        dispatch(setNewPasswordAC('success'))\r\n    } catch (e) {\r\n        alert(e.response.data.error)\r\n        handleServerNetworkError(e, dispatch)\r\n        dispatch(setNewPasswordAC('error'))\r\n    } finally {\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n}\r\n\r\n\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionType = ReturnType<typeof isLoggedAC> | ReturnType<typeof setNewPasswordAC>","import {Dispatch} from \"redux\"\r\nimport {handleServerNetworkError} from \"../../../utils/error-utils\";\r\nimport {authApi} from \"../../m3-dall/app-api\";\r\nimport {isLoggedAC} from \"./auth-reducer\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState = {\r\n    status: 'succeeded' as RequestStatusType,\r\n    error: null as string | null,\r\n    isInitialized: false\r\n}\r\n\r\nexport type AppInitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: AppActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n\r\n        case \"APP/SET-IS-INITIALIZED\":\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({type: 'APP/SET-IS-INITIALIZED', isInitialized} as const)\r\n\r\n\r\nexport const initializeAppTC = () => async (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    try {\r\n\r\n        const data = await authApi.me()\r\n\r\n        dispatch(setIsInitializedAC(true))\r\n        dispatch(isLoggedAC(true))\r\n\r\n\r\n\r\n\r\n    } catch (e) {\r\n\r\n        handleServerNetworkError(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    }\r\n}\r\n\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetIsInitializedAC = ReturnType<typeof setIsInitializedAC>\r\n\r\nexport type AppActionsType = SetAppStatusActionType | SetAppErrorActionType | SetIsInitializedAC\r\n\r\n\r\n","import {authApi, RegisterParamsType} from \"../../../m3-dall/app-api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppStatusAC} from \"../../../m2-bll/reducers/app-reduser\";\r\n\r\n\r\nconst initialState = {\r\n    isUserRegistered: false,\r\n    error:''\r\n}\r\n\r\nexport type RegisterInitialStateType = typeof initialState\r\n\r\nexport const registerReducer = (state:RegisterInitialStateType = initialState, action:RegisterActionType):RegisterInitialStateType => {\r\n    switch (action.type) {\r\n        case 'register/NEW-USER-CREATED':\r\n            return {...state, isUserRegistered: action.value};\r\n        case 'register/SET-ERROR':\r\n            return {...state, error: action.value};\r\n        default: return state;\r\n    }\r\n}\r\n\r\n//actions\r\nexport const registerAC = (value:boolean) => ({type:'register/NEW-USER-CREATED', value} as const)\r\nexport const setErrorAC = (value:string) => ({type:'register/SET-ERROR', value} as const)\r\n\r\n//thunk\r\nexport const registerTC = (data:RegisterParamsType) => async (dispatch:Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    try {\r\n        const res = await authApi.register(data)\r\n        console.log(res)\r\n        dispatch(registerAC(true))\r\n    } catch (e) {\r\n        console.log(`this error is ${e}`)\r\n        dispatch(setErrorAC(e.response.data.error))\r\n    } finally {\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type RegisterActionType =\r\n    ReturnType<typeof registerAC>\r\n    | ReturnType<typeof setErrorAC>","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from './Register.module.scss';\r\nimport {useFormik} from \"formik\";\r\nimport {RegisterInitialStateType, registerTC, setErrorAC} from \"./register-reducer\";\r\nimport {AppStateType} from \"../../../m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n}\r\n\r\n\r\nexport const Register: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const registerState = useSelector<AppStateType, RegisterInitialStateType>(state => state.register)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password:'',\r\n            confirmPassword:''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n                // } else if (!/^[A-Za-z0-9._%+-]{4,10}$/i.test(values.password)) {\r\n            } else if (values.password.length < 4) {\r\n                errors.password = 'Invalid password - Must be 4 characters or more';\r\n            }\r\n\r\n            if (!values.confirmPassword) {\r\n                errors.confirmPassword = 'Required'\r\n            } else if (!(values.password===values.confirmPassword)) {\r\n               errors.confirmPassword = 'Mismatch passwords'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            // alert(JSON.stringify(values));\r\n            const {email, password} = values\r\n\r\n            dispatch(registerTC({email, password}))\r\n            formik.resetForm();\r\n        },\r\n    });\r\n\r\n    const cancelHandler = () => {\r\n        formik.resetForm()\r\n    }\r\n\r\n   if (registerState.isUserRegistered) {\r\n       return <Redirect to={'/login'} />\r\n   }\r\n    if (registerState.error) {\r\n        alert(registerState.error)\r\n        dispatch(setErrorAC(''))\r\n    }\r\n\r\n    return (\r\n        <div className={s.registerBlock}>\r\n            <div className={s.registerCard}>\r\n                <h1 className={s.title}>It-incubator</h1>\r\n                <h2>Sign Up</h2>\r\n                <form  onSubmit={formik.handleSubmit}>\r\n                    <div className={s.formBlock}>\r\n                        <div className={s.inputItem}>\r\n                            <label htmlFor=\"email\" className={s.labelTitle}>Email</label>\r\n                            <input {...formik.getFieldProps('email')}  />\r\n                            <div style={{'color':'red', 'height':'10px'}}>\r\n                                {formik.touched.email && formik.errors.email && formik.errors.email }\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={s.inputItem}>\r\n                            <label htmlFor=\"password\" className={s.labelTitle}>Password</label>\r\n                            <input\r\n                                type='password'\r\n                                {...formik.getFieldProps('password')}\r\n                            />\r\n                            <div style={{'color':'red', 'height':'10px'}}>\r\n                                {formik.touched.password && formik.errors.password && formik.errors.password }\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.inputItem}>\r\n                            <label htmlFor=\"confirmPassword\" className={s.labelTitle}>Confirm Password</label>\r\n                            <input\r\n                                // name='confirmPassword'\r\n                                type='password'\r\n                                {...formik.getFieldProps('confirmPassword')}\r\n                            />\r\n                            <div style={{'color':'red', 'height':'10px'}}>\r\n                                {formik.touched.confirmPassword && formik.errors.confirmPassword && formik.errors.confirmPassword }\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.buttonsBlock}>\r\n                            <button type='button' onClick={cancelHandler}> Cancel </button>\r\n                            <button type=\"submit\"> Register </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const routes = {\r\n    main: '/main',\r\n    login: '/login',\r\n    register: '/register',\r\n    forgotPass: '/restore-pass',\r\n    setPass: `/set-new-password/:id?`,\r\n    err404: '/404',\r\n    profile: '/profile',\r\n    testPage: '/TestPage',\r\n\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport {routes} from \"../../routes/routes\";\r\nimport s from '../Header.module.css'\r\n\r\n\r\nexport const FakeNavbar: React.FC = () => {\r\n\r\n    return (\r\n        <nav>\r\n            <div className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.main} activeClassName={s.activeLink}>main </NavLink>|\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.login} activeClassName={s.activeLink} >login </NavLink>|\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.register} activeClassName={s.activeLink} >register </NavLink>|\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.err404} activeClassName={s.activeLink} >err404 </NavLink>|\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.forgotPass} activeClassName={s.activeLink} >forgot password </NavLink>|\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.setPass} activeClassName={s.activeLink} >set password </NavLink>|\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.profile} activeClassName={s.activeLink} >profile </NavLink>\r\n                </div>\r\n                {/*<div className={s.item}>*/}\r\n                {/*    <NavLink to={routes.testPage} activeClassName={s.activeLink} >test page </NavLink>*/}\r\n                {/*</div>*/}\r\n\r\n            </div>\r\n\r\n        </nav>\r\n            )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Navbar.module.scss'\r\nimport {routes} from \"../../routes/routes\";\r\n\r\n\r\nexport const Navbar: React.FC = () => {\r\n\r\n    return (\r\n        <div className={s.navLoginContainer}>\r\n\r\n            <div className={s.navLogotype}>\r\n                IT-incubator\r\n            </div>\r\n            <nav className={s.navLinksBox}>\r\n\r\n                <div className={s.navLink}>\r\n                    <NavLink to={routes.main}>Packs list</NavLink>\r\n                </div>\r\n                |\r\n                <div className={s.navLink}>\r\n                    <NavLink to={routes.profile}>Profile</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {FakeNavbar} from \"./Navbar/FakeNavbar\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../m2-bll/store\";\r\nimport {Navbar} from \"./Navbar/Navbar\";\r\n\r\nexport const Header: React.FC = () => {\r\n\r\n    const isLogged = useSelector<AppStateType, boolean>(state => state.auth.isLogged)\r\n\r\n    return (\r\n        <div>\r\n\r\n            {isLogged? <Navbar/>:<FakeNavbar/>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './setPass.module.scss';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {setNewPasswordTC} from \"../../../../m2-bll/reducers/auth-reducer\";\r\nimport {AppStateType} from \"../../../../m2-bll/store\";\r\nimport {routes} from \"../../../routes/routes\";\r\n\r\ntype FormikErrorType = {\r\n    password?: string\r\n}\r\n\r\n\r\nexport const SetPass: React.FC = () => {\r\n\r\n    const authMessage = useSelector<AppStateType, string>(state => state.auth.message)\r\n\r\n    const {id} = useParams<{id: string}>();\r\n\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password:'',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n                // } else if (!/^[A-Za-z0-9._%+-]{4,10}$/i.test(values.password)) {\r\n            } else if (values.password.length < 4) {\r\n                errors.password = 'Invalid password - Must be 4 characters or more';\r\n            }\r\n\r\n        },\r\n        onSubmit: values => {\r\n            // alert( JSON.stringify(values));\r\n           \r\n            dispatch(setNewPasswordTC(values.password, id))\r\n            formik.resetForm();\r\n        },\r\n    });\r\n\r\n\r\n    if (authMessage === 'success') {\r\n        return <Redirect to={routes.login} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.setNewPasswordBlock}>\r\n            <div className={s.setNewPasswordCard}>\r\n                <h1 className={s.title}>It-incubator</h1>\r\n                <h2>Set password</h2>\r\n                <form  onSubmit={formik.handleSubmit}>\r\n                    <div className={s.formBlock}>\r\n                        <div className={s.inputItem}>\r\n                            {/*<label htmlFor=\"password\" className={s.labelTitle}>Password</label>*/}\r\n                            <input\r\n                                type='password'\r\n                                placeholder='Password'\r\n                                {...formik.getFieldProps('password')}\r\n                            />\r\n                            <div style={{'color':'red', 'height':'10px'}}>\r\n                                {formik.touched.password && formik.errors.password && formik.errors.password }\r\n                                {authMessage === 'error' && 'SOME ERROR. TRY AGAIN'}\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.innerText}>\r\n                            Create new password and we will send you further instructions to email\r\n                        </div>\r\n                        <div className={s.buttonsBlock}>\r\n                            <button type=\"submit\"> Create new password </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './Error404.module.css';\r\n\r\nexport const Error404 = () => {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.rail}>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n            </div>\r\n            <div className={s.world}>\r\n                <div className={s.forward}>\r\n                    <div className={s.box}>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport {useDispatch} from \"react-redux\";\r\nimport s from \"./Login.module.scss\";\r\nimport {FormikProps} from \"formik\";\r\nimport {InitialValuesType} from \"./LoginContainer\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {routes} from \"../../routes/routes\";\r\n\r\ntype LoginPropsType = {\r\n    formik: FormikProps<InitialValuesType>\r\n    cancelHandler?: Function\r\n}\r\n\r\nexport const Login: React.FC<LoginPropsType> = ({formik, cancelHandler}) => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    return (\r\n        <div className={s.loginBlock}>\r\n            <div className={s.loginCard}>\r\n                <h1 className={s.title}>It-incubator</h1>\r\n                <h2>Sign In</h2>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div className={s.formBlock}>\r\n                        <div className={s.inputItem}>\r\n                            <label htmlFor=\"email\" className={s.labelTitle}>Email</label>\r\n                            <input\r\n                                defaultValue={ \"nya-admin@nya.nya\"\t}\r\n                                {...formik.getFieldProps('email')}  />\r\n                            <div style={{'color': 'red', 'height': '10px'}}>\r\n                                {formik.touched.email && formik.errors.email && formik.errors.email}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={s.inputItem}>\r\n                            <label htmlFor=\"password\" className={s.labelTitle}>Password</label>\r\n                            <input defaultValue={ \"1qazxcvBG\"\t}\r\n                                type='password'\r\n                                {...formik.getFieldProps('password')}\r\n                            />\r\n                            <div style={{'color': 'red', 'height': '10px'}}>\r\n                                {formik.touched.password && formik.errors.password && formik.errors.password}\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.navLinkBlock}>\r\n                            <NavLink to={routes.forgotPass} className={s.navLink}>Forgot password</NavLink>\r\n                        </div>\r\n                        <div className={s.inputItem}>\r\n                            Remember me<input\r\n\r\n                            type={'checkbox'}\r\n                            {...formik.getFieldProps(\"rememberMe\")}\r\n                            checked={formik.values.rememberMe}/>\r\n\r\n\r\n                        </div>\r\n                        <div className={s.buttonsBlock}>\r\n\r\n                            <button type=\"submit\" className={s.button}> login</button>\r\n                        </div>\r\n                        <div>\r\n                            Don`t have an account?\r\n                            <NavLink to={routes.register}>Sing Up</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {Login} from \"./Login\";\r\nimport {loginTC} from \"../../../m2-bll/reducers/auth-reducer\";\r\nimport {AppStateType} from \"../../../m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {routes} from \"../../routes/routes\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n}\r\n\r\nexport type InitialValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\n\r\nexport const LoginContainer: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const isLogged = useSelector<AppStateType, boolean>((state) => state.auth.isLogged)\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (!/^[A-Za-z0-9._%+-]{4,10}$/i.test(values.password)) {\r\n            } else if (values.password.length < 4) {\r\n                errors.password = 'Invalid password - Must be 4 characters or more';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            const {email, password, rememberMe} = values\r\n            dispatch(loginTC({email, password, rememberMe}))\r\n            formik.resetForm()\r\n        },\r\n    });\r\n\r\n    if (isLogged) {\r\n        return <Redirect to={routes.profile}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <Login formik={formik}/>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/1486.279ed7ee.gif\";","import React, { FC } from 'react'\r\nimport preload from '../../../../assecs/image/1486.gif'\r\nimport s from './Preloader.module.scss'\r\n\r\n\r\nconst Preloader: FC<PropsType> = () => {\r\n    return (\r\n    <div className={s.preloaderContainer}>\r\n\r\n            <img src={preload} />\r\n\r\n    </div> )\r\n}\r\nexport default Preloader\r\ntype PropsType = {\r\n}","import React from 'react'\r\nimport s from './ForgotPass.module.scss'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {routes} from '../../../routes/routes';\r\nimport {FormikProps} from 'formik';\r\nimport {ForgotDataType} from '../../../../m3-dall/app-api';\r\n\r\ntype ForgotPropsType = {\r\n    error: string | null\r\n    formik: FormikProps<ForgotDataType>\r\n}\r\n\r\nexport const ForgotPass: React.FC<ForgotPropsType> = React.memo(({error, formik}) => {\r\n\r\n    return (\r\n        <>\r\n            {/*{error && <div className={s.error}>{error}</div>}*/}\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className={s.formContainer}>\r\n                    <div className={s.formBlock}>\r\n                        <div className={s.inputItem}>\r\n                            <label htmlFor=\"email\" className={s.labelTitle}>Email</label>\r\n                            <input\r\n                                value={formik.values.email}\r\n                                {...formik.getFieldProps('email')}  />\r\n                            <div style={{'color': 'red', 'height': '10px'}}>\r\n                                {formik.touched.email && formik.errors.email && formik.errors.email}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.emailText}>\r\n                        <span>Enter your email address and we will send you further instruction</span>\r\n                    </div>\r\n                    <div className={s.buttonItem}>\r\n                        <button type=\"submit\"> Send Instructions</button>\r\n                    </div>\r\n                    <div className={s.passwordText}>\r\n                        <span>Did you remember your password?</span>\r\n                    </div>\r\n                    <div className={s.loginLink}>\r\n                        <NavLink to={routes.login}>{'Try logging in'}</NavLink>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n});","export default __webpack_public_path__ + \"static/media/checkEmail.7adff45f.svg\";","import React from 'react';\r\nimport s from './CheckEmail.module.scss'\r\nimport checkEmail from './../../../../../../assecs/image/checkEmail.svg'\r\n\r\ntype PropsType = {\r\n    email?: string\r\n    setRedirectToCheckEmail: (redirectToCheckEmail: boolean) => void\r\n}\r\nconst CheckEmail: React.FC<PropsType> = ({email, setRedirectToCheckEmail}) => {\r\n\r\n    const goToEmail = () => {\r\n        setRedirectToCheckEmail(false)\r\n    }\r\n\r\n    return (\r\n        <div className={s.checkEmailPage}>\r\n            <div className={s.checkEmailContainer}>\r\n                <h1 className={s.h1}>It-incubator</h1>\r\n                <div className={s.wrapper}>\r\n                    <a className={s.chekEmailImg} href={`mailto:${email}`}>\r\n                        <img onClick={goToEmail} src={checkEmail}/>\r\n                    </a>\r\n                    <span className={s.checkEmail}>Check Email</span>\r\n                    <span className={s.instructions}>We’ve sent an Email with instructions to {email}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default CheckEmail;","import React, {useState} from 'react'\r\nimport {ForgotPass} from './ForgotPass';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../m2-bll/store';\r\nimport {forgotPasswordTC} from '../../../../m2-bll/reducers/forgotPasswordThunk';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport s from './ForgotPass.module.scss'\r\nimport {useFormik} from 'formik';\r\nimport CheckEmail from './CheckEmail/CheckEmail';\r\nimport {ForgotDataType} from '../../../../m3-dall/app-api';\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nexport const ForgotContainerPass: React.FC = React.memo(() => {\r\n    const dispatch = useDispatch();\r\n    const error = useSelector((store: AppStateType) => store.app.error);\r\n    const loading = useSelector((store: AppStateType) => store.app.status)\r\n    const [redirectToCheckEmail, setRedirectToCheckEmail] = useState<boolean>(false)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            from: 'test-front-admin <mail-tanja@mail.ru>',\r\n            message: `<div style=\"background-color: lime; padding: 15px\">\r\n                    password recovery link: \r\n                        <a href='http://localhost:3000/#/set-new-password/$token$'>link</a>\r\n                    </div>`\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            return errors; // если раскомитить, то ошибка с сервера не будет приходить, будет ошибка формы\r\n        },\r\n        onSubmit: (values: ForgotDataType) => {\r\n            dispatch(forgotPasswordTC(values))\r\n            setRedirectToCheckEmail(true)\r\n        }\r\n    });\r\n\r\n    if (redirectToCheckEmail) {\r\n\r\n        return <CheckEmail email={formik.values.email} setRedirectToCheckEmail={setRedirectToCheckEmail}/>\r\n    }\r\n    return (\r\n        <div>\r\n            {loading === 'loading' && <Preloader/>}\r\n            <div className={s.registerBlock}>\r\n                <div className={s.registerCard}>\r\n\r\n                    <h1 className={s.title}>It-incubator</h1>\r\n                    <h2>Forgot your password?</h2>\r\n                    <div className={s.recoveryPasswordContainer}>\r\n                        <ForgotPass\r\n                            error={error}\r\n                            formik={formik}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default ForgotContainerPass;","import {Dispatch} from 'redux';\r\nimport {setAppStatusAC} from './app-reduser';\r\nimport {setRedirectToCheckEmail} from './redirect-reducer';\r\nimport {authApi, ForgotDataType} from '../../m3-dall/app-api';\r\nimport { handleServerNetworkError } from '../../../utils/error-utils';\r\n\r\nexport const forgotPasswordTC = (param: ForgotDataType ) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        authApi.forgot(param)\r\n            .then((res) => {\r\n\r\n                if(res.status === 200) {\r\n\r\n                    dispatch(setAppStatusAC('succeeded'))\r\n                }\r\n            })\r\n            .catch((e) => {\r\n\r\n                handleServerNetworkError(e, dispatch)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {UserProfileType} from \"../../../m2-bll/reducers/profile-reducer\";\r\nimport s from './Profile.module.scss'\r\n\r\ntype ProfilePropsType = {\r\n    isLogged: boolean\r\n    profile: UserProfileType\r\n    isLogout: () => void\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = ({isLogged, profile, isLogout}) => {\r\n    const {email, name, publicCardPacksCount, avatar} = profile\r\n\r\n    // if (!isLogged) {\r\n    //     return <Redirect to={routes.login}/>\r\n    // }\r\n    return (\r\n        <div className={s.profileSidebar}>\r\n            <h1>PROFILE</h1>\r\n            <div className={s.infoBlock}>\r\n                <div>my name: {name}</div>\r\n                <div>\r\n                    <img width={'91%'} src={avatar}/>\r\n                </div>\r\n\r\n                <div>my email: {email}</div>\r\n                <div>publicCardPacksCount: {publicCardPacksCount}</div>\r\n            </div>\r\n            <div className={s.buttonLogout}>\r\n                <button onClick={isLogout}>logout</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport s from './PackListTable.module.scss'\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../n1-main/m2-bll/store\";\r\nimport {CardsPacksType} from '../../n1-main/m2-bll/reducers/packs-reducer';\r\nimport Preloader from \"../../n1-main/m1-ui/common/Preloader/Preloader\";\r\n\r\nexport const PacksListTable: React.FC = () => {\r\n\r\n    const cardPacks = useSelector<AppStateType, Array<CardsPacksType>>(state => state.packs.cardPacks)\r\n\r\n    if (!cardPacks) {\r\n        return <Preloader/>\r\n    }\r\n        // const packs = cardsPacks.map((p, i) => {\r\n        //     return <tr key={i} className={s.tableRow}>\r\n        //         <td className={s.tableCell}>{p.name}</td>\r\n        //         <td className={s.tableCell}>{p.cardsCount}</td>\r\n        //         <td className={s.tableCell}>{p.updated}</td>\r\n        //         <td className={s.tableCell}>{p.created}</td>\r\n        //         <td className={s.tableCell}>{p.rating}</td>\r\n        //     </tr>\r\n        // })\r\n        return (\r\n            <div className={s.tableBlock}>\r\n                <tr className={s.tableRow}>\r\n                    <th className={s.tableCell}>Name</th>\r\n                    <th className={s.tableCell}>Cards</th>\r\n                    <th className={s.tableCell}>Last Updated</th>\r\n                    <th className={s.tableCell}>Created by</th>\r\n                    <th className={s.tableCell}>Actions</th>\r\n                </tr>\r\n                {cardPacks.map((p, i) => {\r\n                    return <tr key={i} className={s.tableRow}>\r\n                        <td className={s.tableCell}>{p.name}</td>\r\n                        <td className={s.tableCell}>{p.cardsCount}</td>\r\n                        <td className={s.tableCell}>{p.updated}</td>\r\n                        <td className={s.tableCell}>{p.created}</td>\r\n                        <td className={s.tableCell}>{p.rating}</td>\r\n                    </tr>\r\n                })}\r\n            </div>\r\n\r\n        )\r\n\r\n}","import React from 'react'\r\nimport s from './Search.module.scss'\r\nimport { Formik } from \"formik\";\r\n\r\n\r\ntype searchFormType = {\r\n    term: string,\r\n\r\n}\r\nconst searchValidate = () => {}\r\n\r\n\r\n\r\nexport const Search: React.FC = () => {\r\n\r\n\r\n    const submit = (values:searchFormType, {setSubmitting}:{setSubmitting:(isSubmitting:boolean) => void}) => {\r\n\r\n        setTimeout(() => {\r\n            alert(JSON.stringify(values));\r\n            setSubmitting(false);\r\n        }, 400);\r\n    }\r\n    return (\r\n        <div className={s.searchBlock}>\r\n            <Formik\r\n                initialValues={{ term: '' }}\r\n                validate={searchValidate}\r\n                onSubmit={submit}\r\n            >\r\n                {props => (\r\n                    <form onSubmit={props.handleSubmit}>\r\n                        <input\r\n                            name=\"term\"\r\n                            type=\"text\"\r\n                            onChange={props.handleChange}\r\n                            onBlur={props.handleBlur}\r\n                            value={props.values.term}\r\n\r\n                        />\r\n                        {props.errors.term && <div id=\"feedback\">{props.errors.term}</div>}\r\n                        <button type=\"submit\">Search</button>\r\n                    </form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {Dispatch} from \"redux\";\r\n\r\nexport type InitialPaginatorStateType = typeof initialState\r\nconst initialState = {\r\n        totalItemsCount:145,\r\n        pageSize: 5,\r\n        currentPage: 1,\r\n        portionSize: 5\r\n}\r\n\r\nconst paginateSlice = createSlice ({\r\n        name: 'paginate',\r\n        initialState,\r\n        reducers: {\r\n                setCurrentPageAC(state, action:PayloadAction<{ pageNumber:number}>){\r\n                        state.currentPage = action.payload.pageNumber\r\n                },\r\n\r\n        }\r\n})\r\n\r\nexport const paginateReducer = paginateSlice.reducer\r\nexport const { setCurrentPageAC } = paginateSlice.actions\r\n\r\nexport const setCurrentPageTC = (pageNumber:number) => (dispatch:Dispatch) => {\r\n        dispatch(setCurrentPageAC({pageNumber}))\r\n}\r\n\r\n\r\n\r\n\r\n","import React, {useState} from 'react';\r\nimport s from './Paginator.module.scss'\r\nimport {AppStateType} from \"../../n1-main/m2-bll/store\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {InitialPaginatorStateType, setCurrentPageTC} from \"../../n1-main/m2-bll/reducers/paginate-reducer\";\r\n\r\n\r\n\r\n\r\nexport const Paginator = () => {\r\n    const paginateState = useSelector<AppStateType, InitialPaginatorStateType>(\r\n        state => state.paginator)\r\n\r\n    const {\r\n        totalItemsCount,\r\n        pageSize,\r\n        currentPage,\r\n        portionSize\r\n    } = paginateState\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n    let pages:number[] = [];\r\n\r\n    for (let i = 1; i<=pagesCount; i++) {\r\n        pages.push(i)\r\n    }\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber  * portionSize;\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            <div className={s.paginatorContainer}>\r\n                <button\r\n                    className = {s.paginatorBtn}\r\n                    disabled={ !(portionNumber > 1) }\r\n                    onClick={() => setPortionNumber(portionNumber - 1)}>\r\n                    {'<<<'}\r\n                </button>\r\n                <div className={s.pageNumbersBlock}>\r\n                    {\r\n                        pages\r\n                            .filter (p => p>= leftPortionPageNumber && p<= rightPortionPageNumber)\r\n                            .map((p) => {\r\n                                return <div className={`${s.pageNumber} ${currentPage === p ? s.selectedPage:''}`}\r\n                                             key = {p}\r\n                                             onClick={ () => { setCurrentPageTC(p) } }> {p}</div>\r\n                            })\r\n\r\n                    }\r\n                </div>\r\n                <button\r\n                    className = {s.paginatorBtn}\r\n                    disabled={ !(portionCount > portionNumber) }\r\n                        onClick={() => setPortionNumber(portionNumber + 1)}>\r\n                    {'>>>'}\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {instance} from \"./app-api\";\r\nimport {PacksType} from \"../m2-bll/reducers/packs-reducer\";\r\n\r\nexport const packsApi = {\r\n    getPacks (params: RequestParamsType) {\r\n\r\n        return instance.get<PacksType>('cards/pack', {params}).then(res => res.data)\r\n    }\r\n}\r\n\r\n\r\nexport type RequestParamsType = {\r\n    packName?: string// не обязательно\r\n    min?: number // не обязательно\r\n    max?: number // не обязательно\r\n    sortPacks?: number// не обязательно\r\n    page?: number // не обязательно\r\n    pageCount?: number // не обязательно\r\n    user_id?:string // чьи колоды\r\n    // не обязательно, или прийдут все\r\n}\r\n","import {handleServerNetworkError} from \"../../../utils/error-utils\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppStatusAC} from \"./app-reduser\";\r\nimport {packsApi, RequestParamsType} from \"../../m3-dall/packs-api\";\r\n\r\nconst initialState = {\r\n    cardPacks: [] as Array<CardsPacksType>,\r\n    cardsPacksTotalCount: 0,\r\n    maxCardsCount: 0,\r\n    minCardsCount: 100,\r\n    page: 1,\r\n    pageCount: 4,\r\n}\r\n\r\nexport const packsReducer = (state: PacksType = initialState, action: ActionType) => {\r\n    switch (action.type) {\r\n        case \"packs/SET-PACKS-CARDS\":\r\n\r\n            const newState = {...state,\r\n                ...action.payload,\r\n                cardPacks: [...action.payload.cardPacks]}\r\n            return newState\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nconst setPacksCards = (payload: PacksType) => ({type: 'packs/SET-PACKS-CARDS', payload} as const)\r\n\r\nexport const getPacksCardsTC = (params: RequestParamsType) => async (dispatch: Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        const data = await packsApi.getPacks(params)\r\n        dispatch(setPacksCards(data))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    }\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setPacksCards>\r\n\r\n\r\nexport type CardsPacksType = {\r\n    _id: string\r\n    user_id: string\r\n    name: string\r\n    path: string\r\n    cardsCount: string\r\n    grade: string\r\n    shots: string\r\n    rating: string\r\n    type: string\r\n    created: Date\r\n    updated: Date\r\n    _v: string\r\n}\r\nexport type PacksType = typeof initialState\r\n\r\n\r\n","import React, {useEffect} from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../m2-bll/store\";\r\nimport {routes} from \"../../routes/routes\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {logoutTC} from \"../../../m2-bll/reducers/auth-reducer\";\r\nimport {UserProfileType} from \"../../../m2-bll/reducers/profile-reducer\";\r\nimport s from './Profile.module.scss'\r\nimport {Profile} from \"./Profile\";\r\nimport {PacksListTable} from \"../../../../n2-features/f1-packsListTable/PacksListTable\";\r\nimport {Search} from \"../../../../n2-features/f4-search/Search\";\r\nimport {Paginator} from \"../../../../n2-features/f3-paginator/Paginator\";\r\nimport {getPacksCardsTC} from \"../../../m2-bll/reducers/packs-reducer\";\r\n\r\nexport const ProfileContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLogged = useSelector<AppStateType, boolean>(state => state.auth.isLogged)\r\n    const profile = useSelector<AppStateType, UserProfileType>(state => state.profile)\r\n    const {name} = profile\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksCardsTC({}))\r\n    }, [])\r\n    const isLogout = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    if (!isLogged) {\r\n        return <Redirect to={routes.login}/>\r\n    }\r\n    return (\r\n        <div className={s.pagesContainer}>\r\n            <div className={s.sideBar}>\r\n                <Profile isLogged={isLogged} profile={profile} isLogout={isLogout}/>\r\n            </div>\r\n            <div className={s.mainPart}>\r\n                <h2>{name}</h2>\r\n                <Search/>\r\n                <PacksListTable/>\r\n                <Paginator />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport const ToggleMyPacks: React.FC = () => {\r\n\r\n    return (\r\n        <div>\r\n            ToggleMyPacks\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const DoubleSlider: React.FC = () => {\r\n\r\n    return (\r\n        <div>\r\n            DoubleSlider\r\n        </div>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport s from \"../../profile/Profile.module.scss\";\r\nimport {Search} from \"../../../../../n2-features/f4-search/Search\";\r\nimport {PacksListTable} from \"../../../../../n2-features/f1-packsListTable/PacksListTable\";\r\nimport {Paginator} from \"../../../../../n2-features/f3-paginator/Paginator\";\r\nimport {ToggleMyPacks} from \"../../../../../n2-features/f5-toggleMyPacks/ToggleMyPacks\";\r\nimport {DoubleSlider} from \"../../../../../n2-features/f6-doubleSlider/DoubleSlider\";\r\nimport {CardsPacksType, getPacksCardsTC} from \"../../../../m2-bll/reducers/packs-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../../m2-bll/store\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nexport const PacksList: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        dispatch(getPacksCardsTC({}))\r\n    }, [])\r\n    const packs = useSelector<AppStateType, CardsPacksType []>(state => state.packs.cardPacks)\r\n    if (!packs) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    return (\r\n        <div className={s.pagesContainer}>\r\n\r\n            <div className={s.sideBar}>\r\n                <ToggleMyPacks/>\r\n                <DoubleSlider/>\r\n            </div>\r\n            <div className={s.mainPart}>\r\n                <h2>PackList</h2>\r\n                <Search/>\r\n                <PacksListTable/>\r\n                <Paginator/>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport s from \"../profile/Profile.module.scss\";\r\nimport {PacksList} from \"./packsList/PackList\";\r\n\r\n\r\n\r\n\r\nexport const Main: React.FC = () => {\r\n\r\n    return (\r\n        <div>\r\n            <PacksList />\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Register} from '../auth/register/Register';\r\nimport {Header} from '../header/Header';\r\nimport {routes} from '../routes/routes';\r\nimport {SetPass} from '../auth/password/setPassword/setPass';\r\nimport {Error404} from '../components/error404/Error404';\r\nimport {initializeAppTC, RequestStatusType} from '../../m2-bll/reducers/app-reduser';\r\nimport {LoginContainer} from '../auth/login/LoginContainer';\r\nimport {AppStateType} from '../../m2-bll/store';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport ForgotContainerPass from '../auth/password/fogotPassword/ForgotContainerPass';\r\nimport {ProfileContainer} from \"../components/profile/ProfileContainer\";\r\nimport {Main} from '../components/Main/Main';\r\nimport {getPacksCardsTC} from \"../../m2-bll/reducers/packs-reducer\";\r\n\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const isInitialized = useSelector<AppStateType, boolean>(state => state.app.isInitialized)\r\n    const status = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n    useEffect(() => {\r\n\r\n        if (!isInitialized) {\r\n            dispatch(initializeAppTC())\r\n        }\r\n    }, [])\r\n\r\n    let appCss = 'appContainer'\r\n\r\n    if (status === 'loading') {\r\n        appCss = 'appPreloader'\r\n    }\r\n\r\n    return (\r\n        <div className={'app'}>\r\n            {status === 'loading' && <Preloader/>}\r\n            <div className={appCss}>\r\n                <Header/>\r\n                <Switch>\r\n                    <Route exact path={'/'} render={() => <Redirect to={routes.main}/>}/>\r\n                    <Route exact path={routes.main} render={() => <Main/>}/>\r\n                    <Route path={routes.login} render={() => <LoginContainer/>}/>\r\n                    <Route path={routes.register} render={() => <Register/>}/>\r\n                    <Route path={routes.setPass} render={() => <SetPass/>}/>\r\n                    <Route path={routes.forgotPass} render={() => <ForgotContainerPass/>}/>\r\n                    <Route path={routes.profile} render={() => <ProfileContainer/>}/>\r\n                    {/*<Route path={routes.testPage} render={() => <TestPage/>}/>*/}\r\n                    <Route path={routes.err404} render={() => <Error404/>}/>\r\n                    <Route path='*' render={() => <Redirect to={routes.err404}/>}/>\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst initialState = {\r\n\r\n}\r\n\r\nexport const cardsReducer = (state: {} = initialState, action: any) => {\r\n        return state\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {authReducer} from \"./reducers/auth-reducer\";\r\nimport {profileReducer} from \"./reducers/profile-reducer\";\r\nimport {appReducer} from \"./reducers/app-reduser\";\r\nimport {registerReducer} from \"../m1-ui/auth/register/register-reducer\";\r\nimport {cardsReducer} from \"./reducers/cards-reducer\";\r\nimport {packsReducer} from \"./reducers/packs-reducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\n\r\nimport {paginateReducer} from \"./reducers/paginate-reducer\";\r\n\r\nconst rootReducers = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    register: registerReducer,\r\n    profile: profileReducer,\r\n    cards: cardsReducer,\r\n    packs: packsReducer,\r\n\r\n    paginator: paginateReducer,\r\n\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducers,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().prepend(thunk)\r\n})\r\n\r\n\r\n//@ts-ignore\r\nwindow.__store__ = store\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducers>\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, any>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./n1-main/m2-bll/store\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n          <Provider store={store}>\n    <App />\n          </Provider>\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}