{"version":3,"sources":["n1-main/m1-ui/auth/password/fogotPassword/ForgotPass.module.scss","n1-main/m1-ui/auth/login/Login.module.scss","n1-main/m1-ui/components/error404/Error404.module.css","n1-main/m1-ui/auth/register/Register.module.scss","n1-main/m1-ui/components/profile/Profile.module.scss","n1-main/m1-ui/auth/password/setPassword/setPass.module.scss","n1-main/m1-ui/auth/password/fogotPassword/CheckEmail/CheckEmail.module.scss","n1-main/m1-ui/header/Navbar/Navbar.module.scss","n1-main/m1-ui/common/Preloader/Preloader.module.scss","n1-main/m3-dall/app-api.ts","utils/error-utils.ts","n1-main/m2-bll/reducers/app-reduser.ts","n1-main/m1-ui/auth/register/register-reducer.ts","n1-main/m1-ui/auth/register/Register.tsx","n1-main/m1-ui/routes/routes.ts","n1-main/m1-ui/header/Navbar/FakeNavbar.tsx","n1-main/m1-ui/header/Navbar/Navbar.tsx","n1-main/m1-ui/header/Header.tsx","n1-main/m2-bll/reducers/profile-reducer.ts","n1-main/m3-dall/passwordRecovery-api.ts","n1-main/m2-bll/reducers/auth-reducer.ts","n1-main/m1-ui/auth/password/setPassword/setPass.tsx","n1-main/m1-ui/components/error404/Error404.tsx","n1-main/m1-ui/auth/login/Login.tsx","n1-main/m1-ui/auth/login/LoginContainer.tsx","assecs/image/1486.gif","n1-main/m1-ui/common/Preloader/Preloader.tsx","n1-main/m1-ui/auth/password/fogotPassword/ForgotPass.tsx","assecs/image/checkEmail.svg","n1-main/m1-ui/auth/password/fogotPassword/CheckEmail/CheckEmail.tsx","n1-main/m1-ui/auth/password/fogotPassword/ForgotContainerPass.tsx","n1-main/m2-bll/reducers/forgotPasswordThunk.ts","n1-main/m1-ui/components/profile/Profile.tsx","n2-features/f1-packsListTable/PacksListTable.tsx","n2-features/f4-search/Search.tsx","n2-features/f3-paginator/Paginator.tsx","n1-main/m1-ui/components/profile/ProfileContainer.tsx","n1-main/m1-ui/components/Main/Main.tsx","n1-main/m1-ui/app/App.tsx","reportWebVitals.ts","n1-main/m2-bll/reducers/cards-reducer.ts","n1-main/m2-bll/reducers/packs-reducer.ts","n1-main/m2-bll/reducers/redirect-reducer.ts","n1-main/m2-bll/store.ts","index.tsx","n1-main/m1-ui/header/Header.module.css"],"names":["module","exports","instance","axios","create","withCredentials","baseURL","authApi","post","then","res","data","delete","handleServerNetworkError","e","dispatch","error","response","message","console","log","setAppErrorAC","setAppStatusAC","initialState","status","isInitialized","type","isUserRegistered","setErrorAC","value","Register","useDispatch","registerState","useSelector","state","register","formik","useFormik","initialValues","email","password","confirmPassword","validate","values","errors","test","length","onSubmit","a","resetForm","to","alert","className","s","registerBlock","registerCard","title","handleSubmit","formBlock","inputItem","htmlFor","labelTitle","getFieldProps","style","touched","buttonsBlock","onClick","routes","FakeNavbar","nav","item","activeClassName","activeLink","Navbar","navLoginContainer","navLogotype","navLinksBox","navLink","Header","isLogged","auth","_id","name","avatar","publicCardPacksCount","created","Date","updated","isAdmin","verified","rememberMe","setUserProfileAC","passwordRecoveryApi","token","resetPasswordToken","checkMailPage","isLoggedAC","setNewPasswordAC","SetPass","authMessage","id","useParams","setNewPasswordBlock","setNewPasswordCard","placeholder","innerText","Error404","container","rail","stamp","four","zero","world","forward","box","wall","Login","cancelHandler","loginBlock","loginCard","defaultValue","navLinkBlock","checked","button","LoginContainer","payload","Preloader","preloaderContainer","src","preload","ForgotPass","React","memo","formContainer","emailText","buttonItem","passwordText","loginLink","CheckEmail","setRedirectToCheckEmail","checkEmailPage","checkEmailContainer","h1","wrapper","chekEmailImg","href","checkEmail","instructions","ForgotContainerPass","store","app","loading","useState","redirectToCheckEmail","from","param","catch","recoveryPasswordContainer","Profile","profile","isLogout","profileSidebar","infoBlock","width","buttonLogout","PacksListTable","Search","Paginator","ProfileContainer","pagesContainer","sideBar","mainPart","Main","App","useEffect","appCss","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateRedirect","rootReducers","combineReducers","action","cards","packs","redirect","configureStore","reducer","middleware","getDefaultMiddleware","prepend","thunk","window","__store__","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7275135.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerBlock\":\"ForgotPass_registerBlock__2xZs4\",\"registerCard\":\"ForgotPass_registerCard__3sMa8\",\"error\":\"ForgotPass_error__2rjVD\",\"formContainer\":\"ForgotPass_formContainer__2mj6t\",\"emailText\":\"ForgotPass_emailText__1kK0u\",\"passwordText\":\"ForgotPass_passwordText__3By3-\",\"formBlock\":\"ForgotPass_formBlock__wReKQ\",\"inputItem\":\"ForgotPass_inputItem__1LO5j\",\"labelTitle\":\"ForgotPass_labelTitle__1s9MG\",\"loginLink\":\"ForgotPass_loginLink__1Jm3m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loginBlock\":\"Login_loginBlock__3Q7_i\",\"loginCard\":\"Login_loginCard__uchU6\",\"formBlock\":\"Login_formBlock__2jk5w\",\"inputItem\":\"Login_inputItem__ix-P5\",\"buttonsBlock\":\"Login_buttonsBlock__f241W\",\"button\":\"Login_button__3435L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Error404_container__UA34i\",\"rail\":\"Error404_rail__1WwBm\",\"stamp\":\"Error404_stamp__38a1y\",\"stampSlide\":\"Error404_stampSlide__2wdSh\",\"world\":\"Error404_world__-iEHt\",\"forward\":\"Error404_forward__2_bPU\",\"slide\":\"Error404_slide__2OM-G\",\"box\":\"Error404_box__1uX-b\",\"roll\":\"Error404_roll__2T2lU\",\"wall\":\"Error404_wall__Sv9h5\",\"zeroFour\":\"Error404_zeroFour__1gDxz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerBlock\":\"Register_registerBlock__3FEC6\",\"registerCard\":\"Register_registerCard__1Cv0K\",\"formBlock\":\"Register_formBlock__1tyLH\",\"inputItem\":\"Register_inputItem__2xMMZ\",\"buttonsBlock\":\"Register_buttonsBlock__1FhdT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagesContainer\":\"Profile_pagesContainer__3W-Ni\",\"sideBar\":\"Profile_sideBar__3CY90\",\"mainPart\":\"Profile_mainPart__2w5Gk\",\"profileSidebar\":\"Profile_profileSidebar__2SkDC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setNewPasswordBlock\":\"setPass_setNewPasswordBlock__3gPuf\",\"setNewPasswordCard\":\"setPass_setNewPasswordCard__3OgS9\",\"formBlock\":\"setPass_formBlock__3JwRv\",\"inputItem\":\"setPass_inputItem__2bIVN\",\"innerText\":\"setPass_innerText__2RvYm\",\"buttonsBlock\":\"setPass_buttonsBlock__3QIgQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkEmailPage\":\"CheckEmail_checkEmailPage__2_y1U\",\"checkEmailContainer\":\"CheckEmail_checkEmailContainer__GEsUm\",\"wrapper\":\"CheckEmail_wrapper__1mAPG\",\"chekEmailImg\":\"CheckEmail_chekEmailImg__1o3g0\",\"checkEmail\":\"CheckEmail_checkEmail__1AkTB\",\"instructions\":\"CheckEmail_instructions__ZEKPC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLoginContainer\":\"Navbar_navLoginContainer__2vxCJ\",\"navLogotype\":\"Navbar_navLogotype__17q_U\",\"navLinksBox\":\"Navbar_navLinksBox__XkYpe\",\"navLink\":\"Navbar_navLink__2WlFq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderContainer\":\"Preloader_preloaderContainer__3egDl\"};","import axios from \"axios\";\r\nimport {UserProfileType} from \"../m2-bll/reducers/profile-reducer\";\r\n\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0/',\r\n    // baseURL: \"http://localhost:7542/2.0/\",\r\n\r\n})\r\n\r\nexport const authApi = {\r\n    me() {\r\n        return instance.post('auth/me', {}).then(res => res.data)\r\n    },\r\n    register(data:RegisterParamsType) {\r\n        return instance.post('/auth/register', data).then(res => res.data)\r\n    },\r\n    login(data: LoginDataType) {\r\n        return instance.post<UserProfileType>('auth/login', data).then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instance.delete('auth/me')\r\n    },\r\n    forgot(data: ForgotDataType) {\r\n        return instance.post('auth/forgot', data)\r\n    }\r\n}\r\n\r\n//types\r\nexport type RegisterParamsType = {\r\n    email:string\r\n    password:string\r\n}\r\n\r\nexport type LoginDataType = {\r\n    email:string\r\n    password:string\r\n    rememberMe: boolean\r\n}\r\n\r\nexport type ForgotDataType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}","\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppErrorAC, setAppStatusAC} from \"../n1-main/m2-bll/reducers/app-reduser\";\r\n// import {setAppErrorAC, SetAppErrorActionType, setAppStatusAC, SetAppStatusActionType} from \"../n1-main/m2-bll/reducers/app-reduser\";\r\n//\r\n\r\n// generic function\r\n// export const handleServerAppError = <T>(data: ResponseType<T>, dispatch: ErrorUtilsDispatchType) => {\r\n//     if (data.messages.length) {\r\n//         dispatch(setAppErrorAC(data.messages[0]))\r\n//     } else {\r\n//         dispatch(setAppErrorAC('Some error occurred'))\r\n//     }\r\n//     dispatch(setAppStatusAC('failed'))\r\n// }\r\n\r\nexport const handleServerNetworkError = (e: any, dispatch: ErrorUtilsDispatchType) => {\r\n    const error = e.response\r\n        ? e.response.data.error\r\n        : (e.message + ', more details in the console');\r\n    console.log(error)\r\n    dispatch(setAppErrorAC(error))\r\n    dispatch(setAppStatusAC('failed'))\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport type ErrorUtilsDispatchType = Dispatch","import {Dispatch} from \"redux\"\r\nimport {handleServerNetworkError} from \"../../../utils/error-utils\";\r\nimport {authApi} from \"../../m3-dall/app-api\";\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\n\r\nconst initialState = {\r\n    status: 'succeeded' as RequestStatusType,\r\n    error: null as string | null,\r\n    isInitialized: false\r\n}\r\n\r\nexport type AppInitialStateType = typeof initialState\r\n\r\nexport const appReducer = (state: AppInitialStateType = initialState, action: AppActionsType): AppInitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n\r\n        case \"APP/SET-IS-INITIALIZED\":\r\n            return {...state, isInitialized: action.isInitialized}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\r\nexport const setAppErrorAC = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\r\nexport const setIsInitializedAC = (isInitialized: boolean) => ({type: 'APP/SET-IS-INITIALIZED', isInitialized} as const)\r\n\r\n\r\nexport const initializeAppTC = () => async (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    try {\r\n\r\n        const data = await authApi.me()\r\n\r\n        dispatch(setIsInitializedAC(true))\r\n\r\n\r\n\r\n\r\n    } catch (e) {\r\n\r\n        handleServerNetworkError(e, dispatch)\r\n    } finally {\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    }\r\n}\r\n\r\nexport type SetAppStatusActionType = ReturnType<typeof setAppStatusAC>\r\nexport type SetAppErrorActionType = ReturnType<typeof setAppErrorAC>\r\nexport type SetIsInitializedAC = ReturnType<typeof setIsInitializedAC>\r\n\r\nexport type AppActionsType = SetAppStatusActionType | SetAppErrorActionType | SetIsInitializedAC\r\n\r\n\r\n","import {authApi, RegisterParamsType} from \"../../../m3-dall/app-api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {setAppStatusAC} from \"../../../m2-bll/reducers/app-reduser\";\r\n\r\n\r\nconst initialState = {\r\n    isUserRegistered: false,\r\n    error:''\r\n}\r\n\r\nexport type RegisterInitialStateType = typeof initialState\r\n\r\nexport const registerReducer = (state:RegisterInitialStateType = initialState, action:RegisterActionType):RegisterInitialStateType => {\r\n    switch (action.type) {\r\n        case 'register/NEW-USER-CREATED':\r\n            return {...state, isUserRegistered: action.value};\r\n        case 'register/SET-ERROR':\r\n            return {...state, error: action.value};\r\n        default: return state;\r\n    }\r\n}\r\n\r\n//actions\r\nexport const registerAC = (value:boolean) => ({type:'register/NEW-USER-CREATED', value} as const)\r\nexport const setErrorAC = (value:string) => ({type:'register/SET-ERROR', value} as const)\r\n\r\n//thunk\r\nexport const registerTC = (data:RegisterParamsType) => async (dispatch:Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    try {\r\n        const res = await authApi.register(data)\r\n        console.log(res)\r\n        dispatch(registerAC(true))\r\n    } catch (e) {\r\n        console.log(`this error is ${e}`)\r\n        dispatch(setErrorAC(e.response.data.error))\r\n    } finally {\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    }\r\n\r\n\r\n}\r\n\r\nexport type RegisterActionType =\r\n    ReturnType<typeof registerAC>\r\n    | ReturnType<typeof setErrorAC>","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from './Register.module.scss';\r\nimport {useFormik} from \"formik\";\r\nimport {RegisterInitialStateType, registerTC, setErrorAC} from \"./register-reducer\";\r\nimport {AppStateType} from \"../../../m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n    confirmPassword?: string\r\n}\r\n\r\n\r\nexport const Register: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const registerState = useSelector<AppStateType, RegisterInitialStateType>(state => state.register)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password:'',\r\n            confirmPassword:''\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n                // } else if (!/^[A-Za-z0-9._%+-]{4,10}$/i.test(values.password)) {\r\n            } else if (values.password.length < 4) {\r\n                errors.password = 'Invalid password - Must be 4 characters or more';\r\n            }\r\n\r\n            if (!values.confirmPassword) {\r\n                errors.confirmPassword = 'Required'\r\n            } else if (!(values.password===values.confirmPassword)) {\r\n               errors.confirmPassword = 'Mismatch passwords'\r\n            }\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            // alert(JSON.stringify(values));\r\n            const {email, password} = values\r\n\r\n            dispatch(registerTC({email, password}))\r\n            formik.resetForm();\r\n        },\r\n    });\r\n\r\n    const cancelHandler = () => {\r\n        formik.resetForm()\r\n    }\r\n\r\n   if (registerState.isUserRegistered) {\r\n       return <Redirect to={'/login'} />\r\n   }\r\n    if (registerState.error) {\r\n        alert(registerState.error)\r\n        dispatch(setErrorAC(''))\r\n    }\r\n\r\n    return (\r\n        <div className={s.registerBlock}>\r\n            <div className={s.registerCard}>\r\n                <h1 className={s.title}>It-incubator</h1>\r\n                <h2>Sign Up</h2>\r\n                <form  onSubmit={formik.handleSubmit}>\r\n                    <div className={s.formBlock}>\r\n                        <div className={s.inputItem}>\r\n                            <label htmlFor=\"email\" className={s.labelTitle}>Email</label>\r\n                            <input {...formik.getFieldProps('email')}  />\r\n                            <div style={{'color':'red', 'height':'10px'}}>\r\n                                {formik.touched.email && formik.errors.email && formik.errors.email }\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={s.inputItem}>\r\n                            <label htmlFor=\"password\" className={s.labelTitle}>Password</label>\r\n                            <input\r\n                                type='password'\r\n                                {...formik.getFieldProps('password')}\r\n                            />\r\n                            <div style={{'color':'red', 'height':'10px'}}>\r\n                                {formik.touched.password && formik.errors.password && formik.errors.password }\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.inputItem}>\r\n                            <label htmlFor=\"confirmPassword\" className={s.labelTitle}>Confirm Password</label>\r\n                            <input\r\n                                // name='confirmPassword'\r\n                                type='password'\r\n                                {...formik.getFieldProps('confirmPassword')}\r\n                            />\r\n                            <div style={{'color':'red', 'height':'10px'}}>\r\n                                {formik.touched.confirmPassword && formik.errors.confirmPassword && formik.errors.confirmPassword }\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.buttonsBlock}>\r\n                            <button type='button' onClick={cancelHandler}> Cancel </button>\r\n                            <button type=\"submit\"> Register </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const routes = {\r\n    main: '/main',\r\n    login: '/login',\r\n    register: '/register',\r\n    forgotPass: '/restore-pass',\r\n    setPass: `/set-new-password`,\r\n    err404: '/404',\r\n    profile: '/profile',\r\n    testPage: '/TestPage',\r\n\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport {routes} from \"../../routes/routes\";\r\nimport s from '../Header.module.css'\r\n\r\n\r\nexport const FakeNavbar: React.FC = () => {\r\n\r\n    return (\r\n        <nav>\r\n            <div className={s.nav}>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.main} activeClassName={s.activeLink}>main </NavLink>|\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.login} activeClassName={s.activeLink} >login </NavLink>|\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.register} activeClassName={s.activeLink} >register </NavLink>|\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.err404} activeClassName={s.activeLink} >err404 </NavLink>|\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.forgotPass} activeClassName={s.activeLink} >forgot password </NavLink>|\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.setPass} activeClassName={s.activeLink} >set password </NavLink>|\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to={routes.profile} activeClassName={s.activeLink} >profile </NavLink>\r\n                </div>\r\n                {/*<div className={s.item}>*/}\r\n                {/*    <NavLink to={routes.testPage} activeClassName={s.activeLink} >test page </NavLink>*/}\r\n                {/*</div>*/}\r\n\r\n            </div>\r\n\r\n        </nav>\r\n            )\r\n}\r\n","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport s from './Navbar.module.scss'\r\nimport {routes} from \"../../routes/routes\";\r\n\r\n\r\nexport const Navbar: React.FC = () => {\r\n\r\n    return (\r\n        <div className={s.navLoginContainer}>\r\n\r\n            <div className={s.navLogotype}>\r\n                IT-incubator\r\n            </div>\r\n            <nav className={s.navLinksBox}>\r\n\r\n                <div className={s.navLink}>\r\n                    <NavLink to={routes.main}>Packs list</NavLink>\r\n                </div>\r\n                |\r\n                <div className={s.navLink}>\r\n                    <NavLink to={routes.profile}>Profile</NavLink>\r\n                </div>\r\n            </nav>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {FakeNavbar} from \"./Navbar/FakeNavbar\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../m2-bll/store\";\r\nimport {Navbar} from \"./Navbar/Navbar\";\r\n\r\nexport const Header: React.FC = () => {\r\n\r\n    const isLogged = useSelector<AppStateType, boolean>(state => state.auth.isLogged)\r\n\r\n    return (\r\n        <div>\r\n\r\n            {isLogged? <Navbar/>:<FakeNavbar/>}\r\n        </div>\r\n    )\r\n}\r\n","\r\nconst initialState: UserProfileType = {\r\n    _id: \"\",\r\n    email: \"\",\r\n    name: \"\",\r\n    avatar: \"\",\r\n    publicCardPacksCount: 0,\r\n    created: new Date(2013, 2, 1, 0, 70),\r\n    updated: new Date(2015, 2, 1, 0, 70),\r\n    isAdmin: false,\r\n    verified: false ,\r\n    rememberMe: false,\r\n    error: \"\",\r\n}\r\n\r\nexport const profileReducer = (state: UserProfileType = initialState, action: ActionType) => {\r\nswitch (action.type) {\r\n    case 'profile/SET-USER-PROFILE-DATA':\r\n        return {\r\n            ...action.data\r\n        }\r\n    default:\r\n        return state\r\n}\r\n}\r\n\r\n\r\nexport const setUserProfileAC = (data:UserProfileType) => ({type:'profile/SET-USER-PROFILE-DATA', data} as const)\r\n\r\n\r\n\r\nexport type UserProfileType = {\r\n    _id: string\r\n    email: string\r\n    name: string\r\n    avatar?: string\r\n    publicCardPacksCount: number // количество колод\r\n    created: Date\r\n    updated: Date\r\n    isAdmin: boolean\r\n    verified: boolean // подтвердил ли почту\r\n    rememberMe: boolean\r\n    error?: string\r\n}\r\n\r\ntype ActionType = ReturnType<typeof setUserProfileAC>","import {instance} from \"./app-api\";\r\n\r\nexport type ForgotDataType = {\r\n    error: string;\r\n}\r\n\r\nexport const passwordRecoveryApi = {\r\n    // forgot: async (email: string) => {\r\n    //     return await instance.post<ForgotDataType>('auth/forgot', {\r\n    //         email,\r\n    //         from: 'test-front-admin <mail-tanja@mail.ru>',\r\n    //         message: `<div style=\"background-color: lime; padding: 15px\">\r\n    //                 password recovery link:\r\n    //                     <a href='http://localhost:3000/#/set-new-password/$token$'>link</a>\r\n    //\r\n    //                 </div>\r\n    //              `\r\n    //     })\r\n    // },\r\n    setNewPassword(password: string, token: string) {\r\n        return instance.post('/auth/set-new-password', {\r\n            password,\r\n            resetPasswordToken: token,\r\n        })\r\n    }\r\n}\r\n","import {authApi, LoginDataType} from \"../../m3-dall/app-api\";\r\nimport {Dispatch} from \"redux\";\r\nimport {handleServerNetworkError} from \"../../../utils/error-utils\";\r\nimport {setAppStatusAC} from \"./app-reduser\";\r\nimport {setUserProfileAC} from \"./profile-reducer\";\r\nimport {passwordRecoveryApi} from \"../../m3-dall/passwordRecovery-api\";\r\n\r\nconst initialState = {\r\n    isLogged: false,\r\n    message: '',\r\n    checkMailPage: false,\r\n}\r\n\r\n\r\nexport const authReducer = (state: InitialStateType = initialState, action: ActionType) => {\r\n\r\n    switch(action.type) {\r\n        case 'auth/IS-LOGGED':\r\n            return {\r\n                ...state,\r\n                isLogged: action.isLogged\r\n            }\r\n        case 'auth/SET-NEW_PASSWORD':\r\n            return {...state, message: action.message }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const isLoggedAC = (isLogged: boolean) => ({type: 'auth/IS-LOGGED', isLogged }as const)\r\nexport const setNewPasswordAC = (message:string) => ({type: 'auth/SET-NEW_PASSWORD', message } as const)\r\n\r\n\r\nexport const loginTC = (payload: LoginDataType) => async (dispatch: Dispatch) => {\r\n    try{\r\n        dispatch(setAppStatusAC('loading'))\r\n        const data = await authApi.login(payload)\r\n        dispatch(isLoggedAC(true))\r\n        dispatch(setUserProfileAC(data))\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const logoutTC = () => async (dispatch: Dispatch) => {\r\n    try{\r\n        dispatch(setAppStatusAC('loading'))\r\n        const data = await authApi.logout()\r\n        dispatch(isLoggedAC(false))\r\n        dispatch(setAppStatusAC('succeeded'))\r\n    } catch (e) {\r\n        handleServerNetworkError(e, dispatch)\r\n    }\r\n}\r\n\r\nexport const setNewPasswordTC = (password:string, token:string) => async (dispatch:Dispatch) => {\r\n    try {\r\n        dispatch(setAppStatusAC('loading'))\r\n        const res = await passwordRecoveryApi.setNewPassword(password, token)\r\n        dispatch(setNewPasswordAC('success'))\r\n    } catch (e) {\r\n        alert(e.response.data.error)\r\n        handleServerNetworkError(e, dispatch)\r\n        dispatch(setNewPasswordAC('error'))\r\n    } finally {\r\n        dispatch(setAppStatusAC(\"succeeded\"))\r\n    }\r\n}\r\n\r\n\r\n\r\ntype InitialStateType = typeof initialState\r\ntype ActionType = ReturnType<typeof isLoggedAC> | ReturnType<typeof setNewPasswordAC>","import React from 'react'\r\nimport s from './setPass.module.scss';\r\nimport {useFormik} from \"formik\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {setNewPasswordTC} from \"../../../../m2-bll/reducers/auth-reducer\";\r\nimport {AppStateType} from \"../../../../m2-bll/store\";\r\nimport {routes} from \"../../../routes/routes\";\r\n\r\ntype FormikErrorType = {\r\n    password?: string\r\n}\r\n\r\n\r\nexport const SetPass: React.FC = () => {\r\n\r\n    const authMessage = useSelector<AppStateType, string>(state => state.auth.message)\r\n\r\n    const {id} = useParams<{id: string}>();\r\n\r\n    const dispatch = useDispatch()\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            password:'',\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n                // } else if (!/^[A-Za-z0-9._%+-]{4,10}$/i.test(values.password)) {\r\n            } else if (values.password.length < 4) {\r\n                errors.password = 'Invalid password - Must be 4 characters or more';\r\n            }\r\n\r\n        },\r\n        onSubmit: values => {\r\n            // alert( JSON.stringify(values));\r\n           \r\n            dispatch(setNewPasswordTC(values.password, id))\r\n            formik.resetForm();\r\n        },\r\n    });\r\n\r\n\r\n    if (authMessage === 'success') {\r\n        return <Redirect to={routes.login} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.setNewPasswordBlock}>\r\n            <div className={s.setNewPasswordCard}>\r\n                <h1 className={s.title}>It-incubator</h1>\r\n                <h2>Set password</h2>\r\n                <form  onSubmit={formik.handleSubmit}>\r\n                    <div className={s.formBlock}>\r\n                        <div className={s.inputItem}>\r\n                            {/*<label htmlFor=\"password\" className={s.labelTitle}>Password</label>*/}\r\n                            <input\r\n                                type='password'\r\n                                placeholder='Password'\r\n                                {...formik.getFieldProps('password')}\r\n                            />\r\n                            <div style={{'color':'red', 'height':'10px'}}>\r\n                                {formik.touched.password && formik.errors.password && formik.errors.password }\r\n                                {authMessage === 'error' && 'SOME ERROR. TRY AGAIN'}\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.innerText}>\r\n                            Create new password and we will send you further instructions to email\r\n                        </div>\r\n                        <div className={s.buttonsBlock}>\r\n                            <button type=\"submit\"> Create new password </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport s from './Error404.module.css';\r\n\r\nexport const Error404 = () => {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.rail}>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n                <div className={s.stamp + \" \" + s.four}>4</div>\r\n                <div className={s.stamp + \" \" + s.zero}>0</div>\r\n            </div>\r\n            <div className={s.world}>\r\n                <div className={s.forward}>\r\n                    <div className={s.box}>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                        <div className={s.wall}></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport {useDispatch} from \"react-redux\";\r\nimport s from \"./Login.module.scss\";\r\nimport {FormikProps} from \"formik\";\r\nimport {InitialValuesType} from \"./LoginContainer\";\r\nimport {NavLink} from 'react-router-dom';\r\nimport {routes} from \"../../routes/routes\";\r\n\r\ntype LoginPropsType = {\r\n    formik: FormikProps<InitialValuesType>\r\n    cancelHandler?: Function\r\n}\r\n\r\nexport const Login: React.FC<LoginPropsType> = ({formik, cancelHandler}) => {\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    return (\r\n        <div className={s.loginBlock}>\r\n            <div className={s.loginCard}>\r\n                <h1 className={s.title}>It-incubator</h1>\r\n                <h2>Sign In</h2>\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <div className={s.formBlock}>\r\n                        <div className={s.inputItem}>\r\n                            <label htmlFor=\"email\" className={s.labelTitle}>Email</label>\r\n                            <input\r\n                                defaultValue={ \"nya-admin@nya.nya\"\t}\r\n                                {...formik.getFieldProps('email')}  />\r\n                            <div style={{'color': 'red', 'height': '10px'}}>\r\n                                {formik.touched.email && formik.errors.email && formik.errors.email}\r\n                            </div>\r\n\r\n                        </div>\r\n                        <div className={s.inputItem}>\r\n                            <label htmlFor=\"password\" className={s.labelTitle}>Password</label>\r\n                            <input defaultValue={ \"1qazxcvBG\"\t}\r\n                                type='password'\r\n                                {...formik.getFieldProps('password')}\r\n                            />\r\n                            <div style={{'color': 'red', 'height': '10px'}}>\r\n                                {formik.touched.password && formik.errors.password && formik.errors.password}\r\n                            </div>\r\n                        </div>\r\n                        <div className={s.navLinkBlock}>\r\n                            <NavLink to={routes.forgotPass} className={s.navLink}>Forgot password</NavLink>\r\n                        </div>\r\n                        <div className={s.inputItem}>\r\n                            Remember me<input\r\n\r\n                            type={'checkbox'}\r\n                            {...formik.getFieldProps(\"rememberMe\")}\r\n                            checked={formik.values.rememberMe}/>\r\n\r\n\r\n                        </div>\r\n                        <div className={s.buttonsBlock}>\r\n\r\n                            <button type=\"submit\" className={s.button}> login</button>\r\n                        </div>\r\n                        <div>\r\n                            Don`t have an account?\r\n                            <NavLink to={routes.register}>Sing Up</NavLink>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useFormik} from \"formik\";\r\nimport {Login} from \"./Login\";\r\nimport {loginTC} from \"../../../m2-bll/reducers/auth-reducer\";\r\nimport {AppStateType} from \"../../../m2-bll/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {routes} from \"../../routes/routes\";\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n    password?: string\r\n}\r\n\r\nexport type InitialValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\n\r\nexport const LoginContainer: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n    const isLogged = useSelector<AppStateType, boolean>((state) => state.auth.isLogged)\r\n\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            password: '',\r\n            rememberMe: false\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n\r\n            if (!values.password) {\r\n                errors.password = 'Required';\r\n            } else if (!/^[A-Za-z0-9._%+-]{4,10}$/i.test(values.password)) {\r\n            } else if (values.password.length < 4) {\r\n                errors.password = 'Invalid password - Must be 4 characters or more';\r\n            }\r\n\r\n            return errors;\r\n        },\r\n        onSubmit: values => {\r\n            const {email, password, rememberMe} = values\r\n            dispatch(loginTC({email, password, rememberMe}))\r\n            formik.resetForm()\r\n        },\r\n    });\r\n\r\n    if (isLogged) {\r\n        return <Redirect to={routes.profile}/>\r\n    }\r\n    return (\r\n        <div>\r\n            <Login formik={formik}/>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/1486.279ed7ee.gif\";","import React, { FC } from 'react'\r\nimport preload from '../../../../assecs/image/1486.gif'\r\nimport s from './Preloader.module.scss'\r\n\r\n\r\nconst Preloader: FC<PropsType> = () => {\r\n    return (\r\n    <div className={s.preloaderContainer}>\r\n\r\n            <img src={preload} />\r\n\r\n    </div> )\r\n}\r\nexport default Preloader\r\ntype PropsType = {\r\n}","import React from 'react'\r\nimport s from './ForgotPass.module.scss'\r\nimport {NavLink} from 'react-router-dom';\r\nimport {routes} from '../../../routes/routes';\r\nimport {FormikProps} from 'formik';\r\nimport {ForgotDataType} from '../../../../m3-dall/app-api';\r\n\r\ntype ForgotPropsType = {\r\n    error: string | null\r\n    formik: FormikProps<ForgotDataType>\r\n}\r\n\r\nexport const ForgotPass: React.FC<ForgotPropsType> = React.memo(({error, formik}) => {\r\n\r\n    return (\r\n        <>\r\n            {/*{error && <div className={s.error}>{error}</div>}*/}\r\n\r\n            <form onSubmit={formik.handleSubmit}>\r\n                <div className={s.formContainer}>\r\n                    <div className={s.formBlock}>\r\n                        <div className={s.inputItem}>\r\n                            <label htmlFor=\"email\" className={s.labelTitle}>Email</label>\r\n                            <input\r\n                                value={formik.values.email}\r\n                                {...formik.getFieldProps('email')}  />\r\n                            <div style={{'color': 'red', 'height': '10px'}}>\r\n                                {formik.touched.email && formik.errors.email && formik.errors.email}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={s.emailText}>\r\n                        <span>Enter your email address and we will send you further instruction</span>\r\n                    </div>\r\n                    <div className={s.buttonItem}>\r\n                        <button type=\"submit\"> Send Instructions</button>\r\n                    </div>\r\n                    <div className={s.passwordText}>\r\n                        <span>Did you remember your password?</span>\r\n                    </div>\r\n                    <div className={s.loginLink}>\r\n                        <NavLink to={routes.login}>{'Try logging in'}</NavLink>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n});","export default __webpack_public_path__ + \"static/media/checkEmail.7adff45f.svg\";","import React from 'react';\r\nimport s from './CheckEmail.module.scss'\r\nimport checkEmail from './../../../../../../assecs/image/checkEmail.svg'\r\n\r\ntype PropsType = {\r\n    email?: string\r\n    setRedirectToCheckEmail: (redirectToCheckEmail: boolean) => void\r\n}\r\nconst CheckEmail: React.FC<PropsType> = ({email, setRedirectToCheckEmail}) => {\r\n\r\n    const goToEmail = () => {\r\n        setRedirectToCheckEmail(false)\r\n    }\r\n\r\n    return (\r\n        <div className={s.checkEmailPage}>\r\n            <div className={s.checkEmailContainer}>\r\n                <h1 className={s.h1}>It-incubator</h1>\r\n                <div className={s.wrapper}>\r\n                    <a className={s.chekEmailImg} href={`mailto:${email}`}>\r\n                        <img onClick={goToEmail} src={checkEmail}/>\r\n                    </a>\r\n                    <span className={s.checkEmail}>Check Email</span>\r\n                    <span className={s.instructions}>We’ve sent an Email with instructions to {email}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default CheckEmail;","import React, {useState} from 'react'\r\nimport {ForgotPass} from './ForgotPass';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppStateType} from '../../../../m2-bll/store';\r\nimport {forgotPasswordTC} from '../../../../m2-bll/reducers/forgotPasswordThunk';\r\nimport Preloader from '../../../common/Preloader/Preloader';\r\nimport s from './ForgotPass.module.scss'\r\nimport {useFormik} from 'formik';\r\nimport CheckEmail from './CheckEmail/CheckEmail';\r\nimport {ForgotDataType} from '../../../../m3-dall/app-api';\r\n\r\ntype FormikErrorType = {\r\n    email?: string\r\n}\r\n\r\nexport const ForgotContainerPass: React.FC = React.memo(() => {\r\n    const dispatch = useDispatch();\r\n    const error = useSelector((store: AppStateType) => store.app.error);\r\n    const loading = useSelector((store: AppStateType) => store.app.status)\r\n    const [redirectToCheckEmail, setRedirectToCheckEmail] = useState<boolean>(false)\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            email: '',\r\n            from: 'test-front-admin <mail-tanja@mail.ru>',\r\n            message: `<div style=\"background-color: lime; padding: 15px\">\r\n                    password recovery link: \r\n                        <a href='http://localhost:3000/#/set-new-password/$token$'>link</a>\r\n                    </div>`\r\n        },\r\n        validate: (values) => {\r\n            const errors: FormikErrorType = {};\r\n            if (!values.email) {\r\n                errors.email = 'Email is required';\r\n            } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n                errors.email = 'Invalid email address';\r\n            }\r\n            // return errors; // если раскомитить, то ошибка с сервера не будет приходить, будет ошибка формы\r\n        },\r\n        onSubmit: (values: ForgotDataType) => {\r\n\r\n            dispatch(forgotPasswordTC(values))\r\n            setRedirectToCheckEmail(true)\r\n        }\r\n    });\r\n\r\n    if (redirectToCheckEmail) {\r\n\r\n        return <CheckEmail email={formik.values.email} setRedirectToCheckEmail={setRedirectToCheckEmail}/>\r\n    }\r\n    return (\r\n        <div>\r\n            {loading === 'loading' && <Preloader/>}\r\n            <div className={s.registerBlock}>\r\n                <div className={s.registerCard}>\r\n\r\n                    <h1 className={s.title}>It-incubator</h1>\r\n                    <h2>Forgot your password?</h2>\r\n                    <div className={s.recoveryPasswordContainer}>\r\n                        <ForgotPass\r\n                            error={error}\r\n                            formik={formik}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default ForgotContainerPass;","import {Dispatch} from 'redux';\r\nimport {setAppStatusAC} from './app-reduser';\r\nimport {setRedirectToCheckEmail} from './redirect-reducer';\r\nimport {authApi, ForgotDataType} from '../../m3-dall/app-api';\r\nimport { handleServerNetworkError } from '../../../utils/error-utils';\r\n\r\nexport const forgotPasswordTC = (param: ForgotDataType ) => {\r\n    return (dispatch: Dispatch) => {\r\n        dispatch(setAppStatusAC('loading'))\r\n        authApi.forgot(param)\r\n            .then((res) => {\r\n\r\n                if(res.status === 200) {\r\n\r\n                    dispatch(setAppStatusAC('succeeded'))\r\n                }\r\n            })\r\n            .catch((e) => {\r\n\r\n                handleServerNetworkError(e, dispatch)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport {UserProfileType} from \"../../../m2-bll/reducers/profile-reducer\";\r\nimport s from './Profile.module.scss'\r\n\r\ntype ProfilePropsType = {\r\n    isLogged: boolean\r\n    profile: UserProfileType\r\n    isLogout: () => void\r\n}\r\n\r\nexport const Profile: React.FC<ProfilePropsType> = ({isLogged, profile, isLogout}) => {\r\n    const {email, name, publicCardPacksCount, avatar} = profile\r\n\r\n    // if (!isLogged) {\r\n    //     return <Redirect to={routes.login}/>\r\n    // }\r\n    return (\r\n        <div className={s.profileSidebar}>\r\n            <h1>PROFILE</h1>\r\n            <div className={s.infoBlock}>\r\n                <div>my name: {name}</div>\r\n                <div>\r\n                    <img width={'91%'} src={avatar}/>\r\n                </div>\r\n\r\n                <div>my email: {email}</div>\r\n                <div>publicCardPacksCount: {publicCardPacksCount}</div>\r\n            </div>\r\n            <div className={s.buttonLogout}>\r\n                <button onClick={isLogout}>logout</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const PacksListTable: React.FC = () => {\r\n\r\n    return (\r\n        <div>\r\n            PacksListTable\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Search: React.FC = () => {\r\n\r\n    return (\r\n        <div>\r\n            Search\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport const Paginator: React.FC = () => {\r\n\r\n    return (\r\n        <div>\r\n            Paginator\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStateType} from \"../../../m2-bll/store\";\r\nimport {routes} from \"../../routes/routes\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {logoutTC} from \"../../../m2-bll/reducers/auth-reducer\";\r\nimport {UserProfileType} from \"../../../m2-bll/reducers/profile-reducer\";\r\nimport s from './Profile.module.scss'\r\nimport {Profile} from \"./Profile\";\r\nimport {PacksListTable} from \"../../../../n2-features/f1-packsListTable/PacksListTable\";\r\nimport {Search} from \"../../../../n2-features/f4-search/Search\";\r\nimport {Paginator} from \"../../../../n2-features/f3-paginator/Paginator\";\r\n\r\nexport const ProfileContainer: React.FC = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const isLogged = useSelector<AppStateType, boolean>(state => state.auth.isLogged)\r\n    const profile = useSelector<AppStateType, UserProfileType>(state => state.profile)\r\n    const {name} = profile\r\n\r\n    const isLogout = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n\r\n    if (!isLogged) {\r\n        return <Redirect to={routes.login}/>\r\n    }\r\n    return (\r\n        <div className={s.pagesContainer}>\r\n            <div className={s.sideBar}>\r\n                <Profile isLogged={isLogged} profile={profile} isLogout={isLogout}/>\r\n            </div>\r\n            <div className={s.mainPart}>\r\n                <h2>{name}</h2>\r\n                <Search/>\r\n                <PacksListTable/>\r\n                <Paginator/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n","import React from 'react'\r\nimport {useDispatch} from \"react-redux\";\r\n\r\n\r\n\r\nexport const Main: React.FC = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <div>\r\n            <h1>MAIN</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport './App.css';\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {Register} from '../auth/register/Register';\r\nimport {Header} from '../header/Header';\r\nimport {routes} from '../routes/routes';\r\nimport {SetPass} from '../auth/password/setPassword/setPass';\r\nimport {Error404} from '../components/error404/Error404';\r\nimport {initializeAppTC, RequestStatusType} from '../../m2-bll/reducers/app-reduser';\r\nimport {LoginContainer} from '../auth/login/LoginContainer';\r\nimport {AppStateType} from '../../m2-bll/store';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport ForgotContainerPass from '../auth/password/fogotPassword/ForgotContainerPass';\r\nimport {ProfileContainer} from \"../components/profile/ProfileContainer\";\r\nimport {Main} from '../components/Main/Main';\r\n\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch()\r\n    const isInitialized = useSelector<AppStateType, boolean>(state => state.app.isInitialized)\r\n    const status = useSelector<AppStateType, RequestStatusType>(state => state.app.status)\r\n    useEffect(() => {\r\n        if (!isInitialized) {\r\n            dispatch(initializeAppTC())\r\n        }\r\n    }, [])\r\n\r\n    let appCss = 'appContainer'\r\n\r\n    if (status === 'loading') {\r\n        appCss = 'appPreloader'\r\n    }\r\n\r\n    return (\r\n        <div className={'app'}>\r\n            {status === 'loading' && <Preloader/>}\r\n            <div className={appCss}>\r\n                <Header/>\r\n                <Switch>\r\n                    <Route exact path={'/'} render={() => <Redirect to={routes.main}/>}/>\r\n                    <Route exact path={routes.main} render={() => <Main/>}/>\r\n                    <Route path={routes.login} render={() => <LoginContainer/>}/>\r\n                    <Route path={routes.register} render={() => <Register/>}/>\r\n                    <Route path={`${routes.setPass}/:id?`} render={() => <SetPass/>}/>\r\n                    <Route path={routes.forgotPass} render={() => <ForgotContainerPass/>}/>\r\n                    <Route path={routes.profile} render={() => <ProfileContainer/>}/>\r\n                    {/*<Route path={routes.testPage} render={() => <TestPage/>}/>*/}\r\n                    <Route path={routes.err404} render={() => <Error404/>}/>\r\n                    <Route path='*' render={() => <Redirect to={routes.err404}/>}/>\r\n                </Switch>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\r\nconst initialState = {\r\n\r\n}\r\n\r\nexport const cardsReducer = (state: {} = initialState, action: any) => {\r\n        return state\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nconst initialState = {\r\n\r\n}\r\n\r\nexport const packsReducer = (state: {} = initialState, action: any) => {\r\n        return state\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export type InitialRedirectType = typeof initialStateRedirect\r\nexport type ActionsRedirectType = ReturnType<typeof setRedirectToCheckEmail>\r\n\r\nconst initialStateRedirect = {\r\n    redirectToCheckEmail: false\r\n}\r\n\r\nexport const redirectReducer = (state: InitialRedirectType = initialStateRedirect, action: ActionsRedirectType): InitialRedirectType => {\r\n    // switch (action.type) {\r\n    //     case \"password/REDIRECT-TO-CHECK-EMAIL\":\r\n    //         debugger\r\n    //         return {\r\n    //\r\n    //             ...state,\r\n    //             redirectToCheckEmail: action.redirectToCheckEmail\r\n    //         }\r\n    //     default: return state\r\n    // }\r\n    return state\r\n}\r\n\r\nexport const setRedirectToCheckEmail = (redirectToCheckEmail:boolean) => ({\r\n    type: \"password/REDIRECT-TO-CHECK-EMAIL\",\r\n    redirectToCheckEmail\r\n\r\n} as const)\r\n\r\n\r\n//---РАБОТАЕТ и на toolkit!!!!\r\n// import {createSlice, PayloadAction} from '@reduxjs/toolkit';\r\n//\r\n// const slice = createSlice({\r\n//     name: 'recovery',\r\n//     initialState: {\r\n//         email:'',\r\n//         redirectToCheckEmail: false\r\n//     },\r\n//     reducers: {\r\n//         setRedirectToCheckEmail(state,action:PayloadAction<{redirectToCheckEmail:boolean}>) {\r\n//             state.redirectToCheckEmail = action.payload.redirectToCheckEmail\r\n//         }\r\n//     },\r\n//     extraReducers: builder => {\r\n//\r\n//     }\r\n// })\r\n//\r\n// export const redirectReducer = slice.reducer\r\n// export const {setRedirectToCheckEmail} = slice.actions\r\n\r\n\r\n\r\n\r\n\r\n","import {combineReducers} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {authReducer} from \"./reducers/auth-reducer\";\r\nimport {profileReducer} from \"./reducers/profile-reducer\";\r\nimport {appReducer} from \"./reducers/app-reduser\";\r\nimport {registerReducer} from \"../m1-ui/auth/register/register-reducer\";\r\nimport {cardsReducer} from \"./reducers/cards-reducer\";\r\nimport {packsReducer} from \"./reducers/packs-reducer\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\nimport {redirectReducer} from './reducers/redirect-reducer';\r\n\r\nconst rootReducers = combineReducers({\r\n    app: appReducer,\r\n    auth: authReducer,\r\n    register: registerReducer,\r\n    profile: profileReducer,\r\n    cards: cardsReducer,\r\n    packs: packsReducer,\r\n    redirect: redirectReducer,\r\n\r\n})\r\n\r\nexport const store = configureStore({\r\n    reducer: rootReducers,\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware().prepend(thunk)\r\n})\r\n\r\n\r\n//@ts-ignore\r\nwindow.__store__ = store\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducers>\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppStateType, unknown, any>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './n1-main/m1-ui/app/App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./n1-main/m2-bll/store\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <HashRouter>\n          <Provider store={store}>\n    <App />\n          </Provider>\n      </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Header_nav__3Wug3\",\"item\":\"Header_item__5NHAR\",\"activeLink\":\"Header_activeLink__1tLNU\"};"],"sourceRoot":""}